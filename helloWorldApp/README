--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker Bridge Network
	Docker Install Docker Private Registry
	DOcker install Portainer    - admin/welcome1, pradipta/welcome1
	Docker install & configure Registry UI for Docker private registry
	Build Docker image for "nodejs-helloworldapp" node js app
	Tag & upload "nodejs-helloworldapp" docker image to private registry
	Docker start two containers from "nodejs-helloworldapp" image. Containers may not exit and hence stop and start them from other terminals
--------------------------------------------------------------------------------------------------------------------------------------------------------------

docker network create -d bridge --subnet=172.18.0.0/16 --gateway=172.18.0.1 pradiptaDockerPocBridgeNet

docker run -d -p 5000:5000 --restart=always --network pradiptaDockerPocBridgeNet --name private-local-registry --hostname private-local-registry registry:2
docker run -d -p 9000:9000 --restart=always --network pradiptaDockerPocBridgeNet --name portainer --hostname portainer -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer

docker run -d -e ENV_DOCKER_REGISTRY_HOST=private-local-registry -e ENV_DOCKER_REGISTRY_PORT=5000 --restart=always -p 0.0.0.0:8000:80 --network pradiptaDockerPocBridgeNet --name docker-registry-frontend --hostname docker-registry-frontend konradkleine/docker-registry-frontend:v2

docker build -f Dockerfile -t nodejs-helloworldapp .

docker tag nodejs-helloworldapp:latest localhost:5000/nodejs-helloworldapp
docker push localhost:5000/nodejs-helloworldapp
docker image remove nodejs-helloworldapp:latest
docker image remove localhost:5000/nodejs-helloworldapp
docker pull localhost:5000/nodejs-helloworldapp:latest

docker run -d --env MOCK_PORT=8531 --expose 8531 -p 8531:8531 --restart=always --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node1 --hostname nodejs-helloworldapp-node1 localhost:5000/nodejs-helloworldapp:latest

docker run -d --env MOCK_PORT=8532 --expose 8532 -p 8532:8532 --restart=always --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node2 --hostname nodejs-helloworldapp-node2 localhost:5000/nodejs-helloworldapp:latest

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker Bridge Network
--------------------------------------------------------------------------------------------------------------------------------------------------------------
docker network create -d bridge --subnet=172.18.0.0/16 --gateway=172.18.0.1 pradiptaDockerPocBridgeNet
docker build -f Dockerfile -t helloworldapp-test .
docker run -p 4500:4500 --network pradiptaDockerPocBridgeNet -it --rm --name helloworldapp-test-node0 helloworldapp-test 

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker start Nodejs container by binding to local file system and exposing a port
--------------------------------------------------------------------------------------------------------------------------------------------------------------
docker run --env MOCK_PORT=4501 --expose 4501 -p 4501:4501 --network pradiptaDockerPocBridgeNet -it --name helloworldapp-test-4501 -v /home/pradipta/helloWorldApp:/home/pradipta/helloWorldApp -w /home/pradipta/helloWorldApp node node helloWorld.js

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker Create nodejs helloworld app image and start two containers. Containers may not exit and hence stop and start them from other terminals
--------------------------------------------------------------------------------------------------------------------------------------------------------------
docker build -f Dockerfile -t nodejs-helloworldapp .
docker run --env MOCK_PORT=8531 --expose 8531 -p 8531:8531 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node1 nodejs-helloworldapp
docker run --env MOCK_PORT=8532 --expose 8532 -p 8532:8532 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node2 nodejs-helloworldapp

docker run --env MOCK_PORT=8531 --expose 8531 -p 8531:8531 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node1 --hostname nodejs-helloworldapp-node1 nodejs-helloworldapp
docker run --env MOCK_PORT=8532 --expose 8532 -p 8532:8532 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-node2 --hostname nodejs-helloworldapp-node2 nodejs-helloworldapp

docker stop container_id_1 container_id_2
docker start container_id_1 container_id_2

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker Create nodejs helloworld app image and start two containers. Containers may not exit and hence stop and start them from other terminals
--------------------------------------------------------------------------------------------------------------------------------------------------------------
docker build -f Dockerfile -t nodejs-httpd-helloworldapp-lb .
docker build -f Dockerfile-byIP -t nodejs-httpd-helloworldapp-lb-ip .
docker run --expose 8530 -p 8530:8530 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-lb nodejs-httpd-helloworldapp-lb
docker run --expose 8533 -p 8533:8533 --network pradiptaDockerPocBridgeNet -it --name nodejs-helloworldapp-lb-ip nodejs-httpd-helloworldapp-lb-ip

docker stop container_id_1 container_id_2
docker start container_id_1 container_id_2

--------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	Docker connect to an existing running container and open a terminal on /bin/bash shell
--------------------------------------------------------------------------------------------------------------------------------------------------------------
docker exec -i -t cab30290b126 /bin/bash

docker exec -i -t 665b4a1e17b6 /bin/bash 						#by ID
docker exec -i -t loving_heisenberg /bin/bash 					#by Name

will return simillar prompt:
	root@665b4a1e17b6:/#

==========================================================================================================================================================
